version: '3.8'

services:
  catalog-service:
    image: soekopaacykel/catalogservice:latest
    container_name: catalogservice
    environment:
      - ImagePath=/srv/images
      - AUTHSERVICE_URL=http://authservice:8080
    ports:
      - "5001:8080"
    networks:
      - auctionGOnet
    volumes:
      - catalog-images:/srv/images
    healthcheck:
      test: ["CMD", "true"]  # En simpel kommando, der altid returnerer succes
      interval: 30s  # Udfør healthcheck hver 30 sekunder
      retries: 5      # Prøv op til 5 gange
      start_period: 10s  # Vent 10 sekunder før første healthcheck
      timeout: 10s    # Timeout på 10 sekunder per healthcheck
    command: /bin/sh -c "sleep 15 && dotnet catalogservice.dll"  # Erstat med den kommando, der starter din applikation
    restart: on-failure

  auth-service:
    image: cbjoedstrup/authservice-image
    container_name: authservice
    environment:
      - UserServiceEndpoint=http://userservice:8080
    ports:
      - "5002:8080"
    networks:
      - auctionGOnet
    healthcheck:
      test: ["CMD", "true"]  # En simpel kommando, der altid returnerer succes
      interval: 30s  # Udfør healthcheck hver 30 sekunder
      retries: 5      # Prøv op til 5 gange
      start_period: 10s  # Vent 10 sekunder før første healthcheck
      timeout: 10s    # Timeout på 10 sekunder per healthcheck
    command: /bin/sh -c "sleep 5 && dotnet authservice.dll"

  user-service:
    image: cbjoedstrup/userservice-image
    container_name: userservice
    ports:
      - "5003:8080"
    networks:
      - auctionGOnet

  auction-service:
    image: cbjoedstrup/auctionservice-image
    container_name: auctionservice
    ports:
      - "5004:8080"
    environment:
      - RabbitHost=rabbitmq  # Miljøvariabel for RabbitMQ
    depends_on:
      - rabbitmq
    networks:
      - auctionGOnet
    healthcheck:
      test: ["CMD", "true"]  # En simpel kommando, der altid returnerer succes
      interval: 30s  # Udfør healthcheck hver 30 sekunder
      retries: 5      # Prøv op til 5 gange
      start_period: 10s  # Vent 10 sekunder før første healthcheck
      timeout: 10s    # Timeout på 10 sekunder per healthcheck
    command: /bin/sh -c "sleep 15 && dotnet bidworker.dll"  # Erstat med den kommando, der starter din applikation
    restart: on-failure

  vault_dev:
    image: hashicorp/vault:latest
    container_name: vault_dev
    restart: on-failure:10
    ports:
      - "8201:8201"
    environment:
      VAULT_ADDR: 'https://0.0.0.0:8201'
      VAULT_API_ADDR: 'https://0.0.0.0:8200'
      VAULT_LOCAL_CONFIG: >
        {
          "listener": [
            {
              "tcp": {
                "address": "0.0.0.0:8201",
                "tls_disable": "0",
                "tls_cert_file": "/data/cert.pem",
                "tls_key_file": "/data/key.pem"
              }
            }
          ],
          "default_lease_ttl": "168h",
          "max_lease_ttl": "720h",
          "ui": true
        }
      VAULT_DEV_ROOT_TOKEN_ID: '00000000-0000-0000-0000-000000000000'
      VAULT_TOKEN: '00000000-0000-0000-0000-000000000000'
    cap_add:
      - IPC_LOCK
    volumes:
      - vault_data:/data/vault/file
      - ./vault-volume:/data
    healthcheck:
      retries: 5
    command: 'server -dev -dev-root-token-id="00000000-0000-0000-0000-000000000000"'
    networks:
      - auctionGOnet  

  vault-init:
    image: hashicorp/vault:latest
    command: sh "/app/vault_init.sh"
    depends_on:
      - vault_dev
    healthcheck:
      retries: 5
    volumes:
      - ./vault-init/vault_init.sh:/app/vault_init.sh
    networks:
      - auctionGOnet  

  bidworker:
    image: soekopaacykel/bidworker:latest  # Udskift med din faktiske Docker image
    container_name: bidworker
    environment:
      - RabbitHost=rabbitmq  # Miljøvariabel for RabbitMQ
    depends_on:
      - rabbitmq
    networks:
      - auctionGOnet
    healthcheck:
      test: ["CMD", "true"]  # En simpel kommando, der altid returnerer succes
      interval: 30s  # Udfør healthcheck hver 30 sekunder
      retries: 5      # Prøv op til 5 gange
      start_period: 10s  # Vent 10 sekunder før første healthcheck
      timeout: 10s    # Timeout på 10 sekunder per healthcheck
    command: /bin/sh -c "sleep 15 && dotnet bidworker.dll"  # Erstat med den kommando, der starter din applikation
    restart: on-failure
   
    

  rabbitmq:
    image: "rabbitmq:management"
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ AMQP port
      - "15672:15672"  # RabbitMQ Management UI port
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    networks:
      - auctionGOnet
    restart: always

volumes:
  catalog-images:
    external: false
  vault_data:

networks:
  auctionGOnet:
    driver: bridge
    name: auctionGOnet
